MODEM_PORT=$(uci -q get xmm-modem.@xmm-modem[0].port)
MODEM_DEVICE=$(uci -q get xmm-modem.@xmm-modem[0].device)
MODEM_INTERFACE=$(uci -q get xmm-modem.@xmm-modem[0].interface)
MODEM_APN=$(uci -q get xmm-modem.@xmm-modem[0].apn)
MODEM_METRIC=$(uci -q get xmm-modem.@xmm-modem[0].metric)
MODEM_ENABLED=$(uci -q get xmm-modem.@xmm-modem[0].enable)
CONNECTION_MAX_RETRIES=$(uci -q get xmm-modem.@xmm-modem[0].max_retries)
CONNECTION_WAIT=$(uci -q get xmm-modem.@xmm-modem[0].connection_wait)
NODE="xmm-modem"

check_xmm_configuration() {
  logger -t "$NODE" "xmm-modem interface detected [${MODEM_DEVICE} - ${MODEM_INTERFACE}]"
  if [ ${MODEM_ENABLED} -ne 1 ]; then
    logger -t "${NODE}" "xmm-modem is disabled"
    exit 0
  fi
  if [[ -z ${MODEM_APN} ]]; then
    logger -t "${NODE}" "APN not specified, using default APN: internet"
    MODEM_APN="internet"
  fi
}

xmm_connect() {
  logger -t "${NODE}" "Connecting modem"
  CONNECT_SCRIPT="/etc/gcom/xmm-connect.gcom"
  XMM_CONNECT=$(APN=${MODEM_APN} gcom -d ${MODEM_PORT} -s ${CONNECT_SCRIPT})
  IP_ADDRESS=$(echo "${XMM_CONNECT}" | awk -F [,] '/^\+CGPADDR: 1/{gsub("\"", ""); print $2}')
  if [[ ! -z ${IP_ADDRESS} ]]; then
    logger -t "${NODE}" "Modem connected"
  else
    RETRIES=0
    until [ ${IP_ADDRESS} ]; do
      XMM_CONNECT=$(APN=${MODEM_APN} gcom -d ${MODEM_PORT} -s ${CONNECT_SCRIPT})
      IP_ADDRESS=$(echo "${XMM_CONNECT}" | awk -F [,] '/^\+CGPADDR: 1/{gsub("\"", ""); print $2}')
      if [[ ! -z ${IP_ADDRESS} ]]; then
        logger -t "${NODE}" "Modem connected"
        break
      else
        RETRIES=$((${RETRIES}+1))
        if [ ${RETRIES} -ge ${CONNECTION_MAX_RETRIES} ]; then
          logger -t "${NODE}" "Modem failed to connect"
          exit 1
        fi
      fi
    done
  fi
}

xmm_disconnect() {
  logger -t "${NODE}" "Disconnecting modem"
  DISCONNECT_SCRIPT="/etc/gcom/xmm-disconnect.gcom"
  gcom -d ${MODEM_PORT} -s ${DISCONNECT_SCRIPT}
  logger -t "${NODE}" "Modem disconnected"
}

xmm_configuration() {
  logger -t "${NODE}" "Configuring network interface"
  CONFIGURATION_SCRIPT="/etc/gcom/xmm-config.gcom"
  XMM_CONFIGURATION=$(gcom -d ${MODEM_PORT} -s ${CONFIGURATION_SCRIPT})
  IP_ADDRESS=$(echo "${XMM_CONFIGURATION}" | awk -F [,] '/^\+CGPADDR: 1/{gsub("\"|\r",""); print $2}'| sed 's/[[:space:]]//g')
  DNS=$(echo "${XMM_CONFIGURATION}" | awk -F [,] '/^\+XDNS: 1/{gsub("\r|\"",""); print $2" "$3}' | sed 's/^[[:space:]]//g')
  for d in ${DNS}; do
    if [ $(echo "${NS}" | grep "${d}") ]; then
      false
    elif [ "${d}" != "0.0.0.0" ]; then
      NS="${NS} ${d}"
    fi
  done
  DNS=${NS}
  if [ ${IP_ADDRESS} ]; then
    GATEWAY=$(echo ${IP_ADDRESS} | awk -F [.] '{print $1"."$2"."$3".1"}')
  else
    logger -t "${NODE}" "Failed to obtain IP address"
    exit 1
  fi
  uci set network.${MODEM_INTERFACE}=interface
  uci set network.${MODEM_INTERFACE}.proto='static'
  uci set network.${MODEM_INTERFACE}.ifname=${MODEM_DEVICE}
  uci set network.${MODEM_INTERFACE}.force_link='1'
  uci set network.${MODEM_INTERFACE}.ipaddr=$(echo ${IP_ADDRESS})
  uci set network.${MODEM_INTERFACE}.netmask=255.255.255.0
  uci set network.${MODEM_INTERFACE}.gateway=${GATEWAY}
  [[ ! -z ${MODEM_METRIC} ]] && uci set network.${MODEM_INTERFACE}.metric=${MODEM_METRIC}
  if [ -n "${DNS}" ]; then
    uci set network.${MODEM_INTERFACE}.dns="$(echo "$DNS")"
  else
    uci set network.${MODEM_INTERFACE}.dns="94.140.14.14 94.140.15.15"
  fi
  if [ ${IP_ADDRESS} ]; then
    ip link set dev ${MODEM_DEVICE} arp off
    uci commit network
    reload_config
  fi
  logger -t "${NODE}" "Network interface configured"
}

xmm_start() {
  check_xmm_configuration
  xmm_connect
  xmm_configuration
  sleep ${CONNECTION_WAIT}
  logger -t "${NODE}" "Connection established"
}

case ${ACTION} in
  ifup)
    case ${DEVICE} in
      ${MODEM_DEVICE})
        xmm_start
        ;;
    esac
    ;;
  ifdown)
    case ${INTERFACE} in
      ${MODEM_INTERFACE})
        xmm_disconnect
      ;;
    esac
  ;;
esac
